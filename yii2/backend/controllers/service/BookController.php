<?php

namespace backend\controllers\service;

use Yii;
use backend\controllers\DefaultController;
use yii\helpers\Json;

/**
 * BookController implements the CRUD actions for common\models\service\Book model.
 */
class BookController extends DefaultController 
{
    public $modelClass       = 'common\models\service\Book';
    public $modelSearchClass = 'common\models\service\BookSearch';

    protected function getRedirectPage($action, $model = null)
    {
        switch ($action) {
            case 'update':
                return ['update', 'id' => $model->id];
                break;
            case 'create':
                return ['update', 'id' => $model->id];
                break;
            default:
                return parent::getRedirectPage($action, $model);
        }
    }

public function actionIndex()
{
    // your default model and dataProvider generated by gii
    $searchModel = new $this->modelSearchClass;
    $dataProvider = $searchModel->search(Yii::$app->request->getQueryParams());

    if (Yii::$app->request->post('hasEditable')) {
  
        $bookId = Yii::$app->request->post('editableKey');
        $model = \common\models\service\Book::findOne($bookId);
        
        $out = Json::encode(['output'=>'', 'message'=>'']);
        
        $posted = current($_POST['Book']);
        $post = ['Book' => $posted];
      
        if ($model->load($post)) { 
            
        $model->save();

        $output = '';

        if (isset($posted['buy_amount'])) {
        $output = Yii::$app->formatter->asDecimal($model->buy_amount, 2);
        }
         if (isset($posted['name'])) {
         $output = ''; // process as you need
         }
        $out = Json::encode(['output'=>$output, 'message'=>'']);
        } // return ajax json encoded response and exit
       //echo $out;
        return true;
    }
    // non-ajax - render the grid by default
    return $this->render('index', [
        'dataProvider' => $dataProvider,
        'searchModel' => $searchModel
    ]);
}

}